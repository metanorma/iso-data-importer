name: Daily ISO Data Update & Release

on:
  schedule:
    # Runs daily at 02:00 UTC (adjust as needed)
    - cron: "0 2 * * *"
  workflow_dispatch: # Allows manual triggering

jobs:
  update_data_and_release:
    name: Check ISO Data, Update, and Release if Changed
    runs-on: ubuntu-latest
    permissions:
      contents: write # To commit, tag, and push in iso-data-importer
      # packages: write # If publishing to GitHub Packages in the future

    steps:
      - name: Checkout iso-data-importer (this repo)
        uses: actions/checkout@v4
        with:
          path: iso-data-importer # Checkout into a subdirectory
          fetch-depth: 0 # Fetches all history and tags

      - name: Checkout iso-data-open repository
        uses: actions/checkout@v4
        with:
          repository: metanorma/iso-data-open
          path: iso-data-open # Checkout into a sibling subdirectory
          # Use a PAT with write access to metanorma/iso-data-open
          # This PAT will be used for pushing changes to iso-data-open
          token: ${{ secrets.GH_PAT_ISO_DATA_OPEN }} # IMPORTANT: Create this secret

      - name: Configure Git User for iso-data-importer
        working-directory: ./iso-data-importer
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1' # Specify your project's Ruby version
          bundler-cache: true
          working-directory: ./iso-data-importer # Ensure bundle cache is for this project

      - name: Run Rake task to update data into iso-data-open
        working-directory: ./iso-data-importer # Run rake from the importer's directory
        run: |
          echo "Updating ISO data using Rake..."
          # force_download=true, export_format=yaml (for committed data)
          # Data will be output to ../iso-data-open relative to this working directory
          bundle exec rake "data:update_all[true,yaml]"
          echo "Data update task finished."

      - name: Check for changes, Commit and Push to iso-data-open
        id: commit_iso_data_open
        working-directory: ./iso-data-open # Operate within the iso-data-open checkout
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          if git diff --quiet HEAD; then
            echo "iso-data-open has no changes."
            echo "has_changes=false" >> $GITHUB_OUTPUT
          else
            echo "iso-data-open has changes."
            git add .
            git commit -m "Update ISO open data files - $(date -u +'%Y-%m-%d %H:%M:%S UTC')"
            echo "Pushing data changes to metanorma/iso-data-open..."
            git push
            echo "has_changes=true" >> $GITHUB_OUTPUT
          fi

      # Steps for iso-data-importer (this repo) release, conditional on changes in iso-data-open
      - name: Bump version, Tag, Commit Version, and Push Tags/Commits to iso-data-importer
        if: steps.commit_iso_data_open.outputs.has_changes == 'true'
        working-directory: ./iso-data-importer
        run: |
          echo "Data changed in iso-data-open, proceeding with version bump for iso-data-importer..."
          # The GITHUB_TOKEN for this repo (iso-data-importer) is used here implicitly
          bundle exec gem bump --version patch --tag --commit --push
          echo "Version bumped, tagged, and pushed for iso-data-importer."

      - name: Publish iso-data-importer to RubyGems.org
        if: steps.commit_iso_data_open.outputs.has_changes == 'true'
        working-directory: ./iso-data-importer
        env:
          RUBYGEMS_API_KEY: ${{ secrets.METANORMA_CI_RUBYGEMS_API_KEY }}
        run: |
          echo "Publishing iso-data-importer to RubyGems.org..."
          gem build *.gemspec
          gem push *.gem
          echo "Published iso-data-importer to RubyGems.org."