name: TEST - Daily ISO Data Update & Release

# This workflow will run on any push to the 'test-workflow' branch,
# or when triggered manually via the Actions tab.
on:
  push:
    branches:
      - test-workflow
  workflow_dispatch:

jobs:
  update_data_and_release:
    name: TEST - Check ISO Data, Update, and Release if Changed
    runs-on: ubuntu-latest
    permissions:
      contents: write # To commit, tag, and push in iso-data-importer

    steps:
      - name: Checkout iso-data-importer (this repo)
        uses: actions/checkout@v4
        with:
          repository: H3xano/iso-data-importer # Using your fork of the importer
          path: iso-data-importer             # Checkout into a subdirectory
          fetch-depth: 0                      # Fetches all history and tags

      - name: Checkout iso-data-open repository
        uses: actions/checkout@v4
        with:
          repository: H3xano/iso-data-open         # Using your fork of the data repo
          path: iso-data-open                      # Checkout into a sibling subdirectory
          token: ${{ secrets.GH_PAT_ISO_DATA_OPEN }} # Your PAT to push to your data repo fork

      - name: Configure Git User for iso-data-importer
        working-directory: ./iso-data-importer
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1' # Specify your project's Ruby version
          bundler-cache: true
          working-directory: ./iso-data-importer # Ensure bundle cache is for this project

      - name: Run Rake task to update data into iso-data-open
        working-directory: ./iso-data-importer
        run: |
          echo "Updating ISO data using Rake..."
          bundle exec rake "data:update_all[true,yaml,../iso-data-open]"
          echo "Data update task finished."

      # --- START OF NEW DEBUGGING STEP ---
      - name: Debug - List Directories and Files
        run: |
          echo "--- Current Directory ---"
          pwd
          
          echo "--- Full Workspace Listing (Recursive) ---"
          ls -laR .
          
          echo "--- Contents of the TARGET directory (iso-data-open) ---"
          ls -la ./iso-data-open
          
          echo "--- Contents of the LIKELY WRONG directory (iso-data-importer/iso-data-open) ---"
          ls -la ./iso-data-importer/iso-data-open || echo "Directory does not exist, which is good."
      # --- END OF NEW DEBUGGING STEP ---

      - name: Check for changes, Commit and Push to iso-data-open
        id: commit_iso_data_open
        working-directory: ./iso-data-open # Operate within the iso-data-open checkout
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          if git diff --quiet HEAD; then
            echo "iso-data-open has no changes."
            echo "has_changes=false" >> $GITHUB_OUTPUT
          else
            echo "iso-data-open has changes."
            git add .
            git commit -m "TEST: Update ISO open data files - $(date -u +'%Y-%m-%d %H:%M:%S UTC')"
            echo "Pushing data changes to H3xano/iso-data-open..."
            git push
            echo "has_changes=true" >> $GITHUB_OUTPUT
          fi

      - name: Bump version, Tag, and Commit in iso-data-importer
        if: steps.commit_iso_data_open.outputs.has_changes == 'true'
        working-directory: ./iso-data-importer
        run: |
          echo "Data changed in iso-data-open, proceeding with version bump for iso-data-importer..."
          # The GITHUB_TOKEN for this repo (iso-data-importer) is used here implicitly
          # --no-push is used in the gem bump command to prevent pushing to the main repo
          bundle exec gem bump --version patch --tag --commit --push
          echo "Version bumped, tagged, and pushed for iso-data-importer."

      - name: DISABLED - Publish to RubyGems.org
        if: false # This step is permanently disabled for the test
        working-directory: ./iso-data-importer
        env:
          RUBYGEMS_API_KEY: ${{ secrets.METANORMA_CI_RUBYGEMS_API_KEY }}
        run: |
          echo "This step is disabled. In a real run, it would publish to RubyGems.org."
          # gem build *.gemspec
          # gem push *.gem